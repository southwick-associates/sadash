% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualize.R
\name{plot_county}
\alias{plot_county}
\title{Make a county chloropleth for all metrics}
\usage{
plot_county(dat)
}
\arguments{
\item{dat}{a dashboard table where segment == "County" that has a "geometry"
column (e.g., produced from \code{\link{join_county_map}})}
}
\description{
Intended to be run on the output of \code{\link{join_county_map}} (the 
"county" element specifically). Returns a list with one element per value 
of the dat$metric variable.
}
\examples{
library(dplyr)
data(dashboard)
county_map <- get_county_map("SC")
county_census <- load_counties(state = "SC")
dash_list <- join_county_map(dashboard, county_map, county_census)

x <- filter(dash_list$county, group == "all_sports", quarter == 4)
p <- plot_county(x)
p$churn
gridExtra::grid.arrange(grobs = p)

# interactive with plotly
plotly::ggplotly(p$churn)
plotly::subplot(p, nrows = 2) \%>\% plotly::hide_colorbar()
}
\seealso{
Other functions to run dashboard visualization: \code{\link{get_county_map}},
  \code{\link{int_breaks}}, \code{\link{join_county_map}},
  \code{\link{plot_month}}, \code{\link{plot_value2}},
  \code{\link{plotly_config}}, \code{\link{run_visual}}
}
\concept{functions to run dashboard visualization}
